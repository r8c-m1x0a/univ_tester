#pragma once
//=====================================================================//
/*!	@file
	@brief	R8C グループ・ベクター関係定義
    @author 平松邦仁 (hira@rvf-rc45.net)
	@copyright	Copyright (C) 2015, 2017 Kunihito Hiramatsu @n
				Released under the MIT license @n
				https://github.com/hirakuni45/R8C/blob/master/LICENSE
*/
//=====================================================================//
#include <unistd.h>

#define INTERRUPT_FUNC __attribute__ ((interrupt))

#ifdef __cplusplus
extern "C" {
#endif

	//-----------------------------------------------------------------//
	/*!
		@brief  無効命令エントリー（割り込み）
	*/
	//-----------------------------------------------------------------//
	void undef_inst(void) INTERRUPT_FUNC;


	//-----------------------------------------------------------------//
	/*!
		@brief  BRK 命令エントリー（割り込み）
	*/
	//-----------------------------------------------------------------//
	void brk_inst(void) INTERRUPT_FUNC;


	//-----------------------------------------------------------------//
	/*!
		@brief  無効タスクエントリー（割り込み）
	*/
	//-----------------------------------------------------------------//
	void null_intr(void) INTERRUPT_FUNC;


	//-----------------------------------------------------------------//
	/*!
		@brief  フラッシュ・レディ割り込み
	*/
	//-----------------------------------------------------------------//
	void FLASH_READY_intr(void) INTERRUPT_FUNC;


	//-----------------------------------------------------------------//
	/*!
		@brief  ADC 変換終了割り込み
	*/
	//-----------------------------------------------------------------//
	void ADC_intr(void) INTERRUPT_FUNC;


	//-----------------------------------------------------------------//
	/*!
		@brief  コンパレーター１
	*/
	//-----------------------------------------------------------------//
	void COMP_B1_intr(void) INTERRUPT_FUNC;


	//-----------------------------------------------------------------//
	/*!
		@brief  コンパレーター３
	*/
	//-----------------------------------------------------------------//
	void COMP_B3_intr(void) INTERRUPT_FUNC;


	//-----------------------------------------------------------------//
	/*!
		@brief  タイマーＲＢ割り込み
	*/
	//-----------------------------------------------------------------//
	void TIMER_RB_intr(void) INTERRUPT_FUNC;


	//-----------------------------------------------------------------//
	/*!
		@brief  タイマーＲＣ割り込み
	*/
	//-----------------------------------------------------------------//
	void TIMER_RC_intr(void) INTERRUPT_FUNC;


	//-----------------------------------------------------------------//
	/*!
		@brief  タイマーＲＪ割り込み
	*/
	//-----------------------------------------------------------------//
	void TIMER_RJ_intr(void) INTERRUPT_FUNC;


	//-----------------------------------------------------------------//
	/*!
		@brief  UART0 送信割り込み
	*/
	//-----------------------------------------------------------------//
	void UART0_TX_intr(void) INTERRUPT_FUNC;


	//-----------------------------------------------------------------//
	/*!
		@brief  UART0 受信割り込み
	*/
	//-----------------------------------------------------------------//
	void UART0_RX_intr(void) INTERRUPT_FUNC;


	//-----------------------------------------------------------------//
	/*!
		@brief  INT0 割り込み
	*/
	//-----------------------------------------------------------------//
	void INT0_intr(void) INTERRUPT_FUNC;


	//-----------------------------------------------------------------//
	/*!
		@brief  INT1 割り込み
	*/
	//-----------------------------------------------------------------//
	void INT1_intr(void) INTERRUPT_FUNC;


	//-----------------------------------------------------------------//
	/*!
		@brief  INT2 割り込み
	*/
	//-----------------------------------------------------------------//
	void INT2_intr(void) INTERRUPT_FUNC;


	//-----------------------------------------------------------------//
	/*!
		@brief  INT3 割り込み
	*/
	//-----------------------------------------------------------------//
	void INT3_intr(void) INTERRUPT_FUNC;


	//-----------------------------------------------------------------//
	/*!
		@brief  割り込み無効
	*/
	//-----------------------------------------------------------------//
	void di(void);


	//-----------------------------------------------------------------//
	/*!
		@brief  割り込み有効
	*/
	//-----------------------------------------------------------------//
	void ei(void);

#ifdef __cplusplus
};
#endif
